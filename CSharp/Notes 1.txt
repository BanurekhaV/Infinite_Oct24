DotNet  Framework

provides Platform Independence and language Independence

4 major components

CLS - Common Language Specification + CTS - Common Type Specification
FCL - Framework Class Library  (is a collection of more than 7000 classes and types for read/write, access database, GUI, Drawing, Web services)
CLR - Common Language Runtime 
.NetTools  ( VS IDE)


Dot net Applications on compilation creates an assembly file
- assembly files are either .exe or .dll ( 2 types)

DotNet applications on execution contains 2 steps
   compilation - source code to IL
   Execution of JIT compilation - to convert IL to native code

The native code is not stored anywhere. Once the program execution is over, it is discarded.

In conclusion Dotnet is Microsofts web services strategy to connect information, people, systems, devices thru software

- It is a platform that provides a standard set of services
   - Data Access (ADO.Net)
   - User Interface(WPF, Winforms)
   - Web Applications ( Asp.net, Silverlight)
   - Network communication (WCF, WWF)

Assemblies : Are fundamental units of deployment, version control, reusable, provides security for dotnet application

- Contains PE header(portable executable), CLE Header, Manifest File and IL
- Manifest files contain Metadata (data about data)
- Can be private or shared
- Shared assemblies are placed in GAC (Global Assembly Cache)

GAC : machine wide central repository of assemblies
  - Assemblies in GAC should be strongly named
  - Strong Name consists of Simple Text name, version number, a public key and a digital signature
  - gacutil/i for installing an assembly into gac, and gacutil/u for uninstalling

Note : Some information in the assembly manifest can be modified using attributes
- use ILDASM to peek into the assembly 
- Use ILASM to reconstruct an assembly 
- We need to operate the above utilities from developer command prompt


