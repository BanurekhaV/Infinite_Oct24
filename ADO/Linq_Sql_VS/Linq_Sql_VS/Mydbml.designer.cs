#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Linq_Sql_VS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InfiniteDB")]
	public partial class MydbmlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblEmployee(tblEmployee instance);
    partial void UpdatetblEmployee(tblEmployee instance);
    partial void DeletetblEmployee(tblEmployee instance);
    partial void InserttblDepartment(tblDepartment instance);
    partial void UpdatetblDepartment(tblDepartment instance);
    partial void DeletetblDepartment(tblDepartment instance);
    #endregion
		
		public MydbmlDataContext() : 
				base(global::Linq_Sql_VS.Properties.Settings.Default.InfiniteDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MydbmlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydbmlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydbmlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydbmlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblEmployee> tblEmployees
		{
			get
			{
				return this.GetTable<tblEmployee>();
			}
		}
		
		public System.Data.Linq.Table<tblDepartment> tblDepartments
		{
			get
			{
				return this.GetTable<tblDepartment>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getsalary")]
		public int sp_getsalary([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string ename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> salary)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ename, salary);
			salary = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmployee")]
	public partial class tblEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpId;
		
		private string _EmpName;
		
		private string _Gender;
		
		private System.Nullable<double> _Salary;
		
		private System.Nullable<int> _DeptId;
		
		private string _Phoneno;
		
		private System.Nullable<double> _AnnualSalary;
		
		private EntityRef<tblDepartment> _tblDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIdChanging(int value);
    partial void OnEmpIdChanged();
    partial void OnEmpNameChanging(string value);
    partial void OnEmpNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnSalaryChanging(System.Nullable<double> value);
    partial void OnSalaryChanged();
    partial void OnDeptIdChanging(System.Nullable<int> value);
    partial void OnDeptIdChanged();
    partial void OnPhonenoChanging(string value);
    partial void OnPhonenoChanged();
    partial void OnAnnualSalaryChanging(System.Nullable<double> value);
    partial void OnAnnualSalaryChanged();
    #endregion
		
		public tblEmployee()
		{
			this._tblDepartment = default(EntityRef<tblDepartment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this.OnEmpNameChanging(value);
					this.SendPropertyChanging();
					this._EmpName = value;
					this.SendPropertyChanged("EmpName");
					this.OnEmpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(7)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Float")]
		public System.Nullable<double> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="Int")]
		public System.Nullable<int> DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					if (this._tblDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phoneno", DbType="VarChar(12)")]
		public string Phoneno
		{
			get
			{
				return this._Phoneno;
			}
			set
			{
				if ((this._Phoneno != value))
				{
					this.OnPhonenoChanging(value);
					this.SendPropertyChanging();
					this._Phoneno = value;
					this.SendPropertyChanged("Phoneno");
					this.OnPhonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualSalary", AutoSync=AutoSync.Always, DbType="Float", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> AnnualSalary
		{
			get
			{
				return this._AnnualSalary;
			}
			set
			{
				if ((this._AnnualSalary != value))
				{
					this.OnAnnualSalaryChanging(value);
					this.SendPropertyChanging();
					this._AnnualSalary = value;
					this.SendPropertyChanged("AnnualSalary");
					this.OnAnnualSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblEmployee", Storage="_tblDepartment", ThisKey="DeptId", OtherKey="DeptNum", IsForeignKey=true)]
		public tblDepartment tblDepartment
		{
			get
			{
				return this._tblDepartment.Entity;
			}
			set
			{
				tblDepartment previousValue = this._tblDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tblDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDepartment.Entity = null;
						previousValue.tblEmployees.Remove(this);
					}
					this._tblDepartment.Entity = value;
					if ((value != null))
					{
						value.tblEmployees.Add(this);
						this._DeptId = value.DeptNum;
					}
					else
					{
						this._DeptId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDepartment")]
	public partial class tblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeptNum;
		
		private string _Deptname;
		
		private string _DeptLocation;
		
		private EntitySet<tblEmployee> _tblEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptNumChanging(int value);
    partial void OnDeptNumChanged();
    partial void OnDeptnameChanging(string value);
    partial void OnDeptnameChanged();
    partial void OnDeptLocationChanging(string value);
    partial void OnDeptLocationChanged();
    #endregion
		
		public tblDepartment()
		{
			this._tblEmployees = new EntitySet<tblEmployee>(new Action<tblEmployee>(this.attach_tblEmployees), new Action<tblEmployee>(this.detach_tblEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeptNum
		{
			get
			{
				return this._DeptNum;
			}
			set
			{
				if ((this._DeptNum != value))
				{
					this.OnDeptNumChanging(value);
					this.SendPropertyChanging();
					this._DeptNum = value;
					this.SendPropertyChanged("DeptNum");
					this.OnDeptNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deptname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Deptname
		{
			get
			{
				return this._Deptname;
			}
			set
			{
				if ((this._Deptname != value))
				{
					this.OnDeptnameChanging(value);
					this.SendPropertyChanging();
					this._Deptname = value;
					this.SendPropertyChanged("Deptname");
					this.OnDeptnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptLocation", DbType="VarChar(20)")]
		public string DeptLocation
		{
			get
			{
				return this._DeptLocation;
			}
			set
			{
				if ((this._DeptLocation != value))
				{
					this.OnDeptLocationChanging(value);
					this.SendPropertyChanging();
					this._DeptLocation = value;
					this.SendPropertyChanged("DeptLocation");
					this.OnDeptLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblEmployee", Storage="_tblEmployees", ThisKey="DeptNum", OtherKey="DeptId")]
		public EntitySet<tblEmployee> tblEmployees
		{
			get
			{
				return this._tblEmployees;
			}
			set
			{
				this._tblEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = this;
		}
		
		private void detach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = null;
		}
	}
}
#pragma warning restore 1591
