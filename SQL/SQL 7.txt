 --cursors 
--eg 1

--declaring some variables to be used inside the cursor

 declare @pname varchar(25), @price int, @qty int
 --declare a cursor
 declare prd_cursor cursor
 for select productname,price,quantityavailable from Products

 --open the cursor
 open prd_cursor
 --read the data from the cursor
 fetch next from prd_cursor into @pname,@price,@qty

 --iterate the cursor set till we have rows to read
 while @@FETCH_STATUS = 0
  begin
   print 'The Product named ' + @pname + ' ' + 'Costs ' + cast(@price as varchar(8)) +
    ' and the availability is ' + cast(@qty as varchar(3))
	
	--start fetching the balance rows
	fetch next from prd_cursor into @pname,@price,@qty
 end

 --close the cursor
 close prd_curosr
 --deallocate the cursor
 deallocate prd_cursor

 --eg 2
 --cursors with some tsql
 declare @sal float, @ename varchar(30)
 declare empcursor cursor
 for select empname,salary from tblemployee

 open empcursor
 fetch next from empcursor into @ename,@sal
 while @@FETCH_STATUS = 0
  begin
  if(@sal > 5500)
    begin
	 print @ename + ' Earns ' + cast(@sal as varchar(8))
	end
	else
	 begin
	  print @ename + ' needs an increment '
	  end
	  fetch next from empcursor into @ename,@sal
	  end
	  close empcursor
	 
	 
	 /*close cur2
	  open cur2
	  declare @dno int, @dname varchar(10)
	declare cur2 cursor for select * from tbldepartment
	fetch next from cur2 into @dno, @dname */

--eg 3
--static cursor

select * from tblemployee

declare @staticsal float, @staticename varchar(20)
declare emp_static cursor static
for select empname,salary from tblemployee

open emp_static 
fetch relative 5 from emp_static into @staticename,@staticsal
while @@FETCH_STATUS = 0
 begin
  if(@staticsal > 5500)
   begin
     print @staticename + ' Earns ' + cast(@staticsal as varchar(8))
	end
	else
	 begin
	  print @staticename + ' needs an increment '
	  end
	fetch prior from emp_static into @staticename,@staticsal
 end
  fetch relative 6 from emp_static into @staticename,@staticsal
 print @staticename
 fetch next from emp_static into @staticename,@staticsal
 print @staticename



 close emp_static
 deallocate emp_static

--eg 4 dynamic cursor

declare @empname varchar(20), @empsal float

declare emp_dynamic cursor dynamic
for select empname,salary from tblemployee
open emp_dynamic
fetch next from emp_dynamic into @empname,@empsal

while @@FETCH_STATUS = 0
begin
 if(@empsal < 5300)
  begin
    print 'Current Salary of : ' + @empname +' is ' + cast(@empsal as varchar(8))
	update tblemployee
	set salary = salary+100 where current of emp_dynamic
	--let us get the updated salary from the table
	select @empsal=salary from tblemployee where empname=@empname
	print 'Revised Salary of : ' + @empname +' is ' + cast(@empsal as varchar(8))
	end
	else
	 begin
	  print @empname + '  ' + ' is earning well'
	  end

	  fetch next from emp_dynamic into @empname, @empsal
	end

	close emp_dynamic
	deallocate emp_dynamic


	
--file groups
create database HomeCare on primary
(
--primary group
Name='HomeCare',
filename='C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\HomeC.mdf',
size=5mb,
maxsize=unlimited,
filegrowth=1024kb
),
--secondary file group
--first file in secondary group
filegroup hcgrp1
(
Name='HomeCareFile1',
filename='C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\HomeCareFile1.ndf',
size=1mb,
maxsize=unlimited,
filegrowth=1024kb),
--like the above we can create 1mb size multiple secondaray groups
--let us now create one group for log files
filegroup HomeCareLogGrp
(
Name='HomeCareLog',
filename='C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\HomeLog.ldf',
size=5mb,
maxsize=unlimited,
filegrowth=1024kb)

use HomeCare
create table homecustomers(custid int, cname varchar(30)) 


create table homesuppliers(suppid int, sname varchar(30)) on hcgrp1